use Libraries.Game.Game
use Libraries.Game.Graphics.Drawable
use Libraries.Game.InputMonitor
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.Graphics.Color
use Libraries.Compute.Random
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Interface.Events.CollisionEvent2D
use Libraries.Compute.Math

class Main is Game, CollisionListener2D
    Drawable circle
    Drawable target
    Color c
    InputMonitor monitor
    KeyboardEvent keys
    Random r

    integer speed = 200
    integer targetSpeed = 100
    integer xSpeed = 100
    integer ySpeed = 100
    integer score = 0
    integer circleRadius = 10

    number time = 0
    number cumTime = 0
    
    boolean pressed = false

    action Main
        StartGame()
    end

    action CreateGame
        circle:LoadFilledCircle(circleRadius)
        target:LoadFilledRectangle(30, 30, c:Red())
        target:SetPosition(400, 300)
        circle:SetCollidable(true)
        target:SetCollidable(true)
        Add(circle)
        Add(target)
        time = r:RandomNumber()
        AddCollisionListener(me)
    end

    action BeginCollision(CollisionEvent2D e)
        score = score + 1
        output "Score: " + score
        circle:SetPosition(0,0)
    end

    action Update(number seconds)
        cumTime = cumTime + seconds
        if cumTime > time
            cumTime = 0
            time = r:RandomNumber()
            xSpeed = r:RandomIntegerBetween(-targetSpeed, targetSpeed)
            ySpeed = r:RandomIntegerBetween(-targetSpeed, targetSpeed)
        end
        number newX = target:GetX() + seconds * xSpeed
        number newY = target:GetY() + seconds * ySpeed
        repeat while newX < 0 and newX > 600
            xSpeed = r:RandomIntegerBetween(-targetSpeed, targetSpeed)
            newX = target:GetX() + seconds * xSpeed
        end
        repeat while newY < 0 and newY > 800
            ySpeed = r:RandomIntegerBetween(-targetSpeed, targetSpeed)
            newY = target:GetY() + seconds * ySpeed
        end
        target:SetX(newX)
        target:SetY(newY)
        number x = circle:GetX()
        number y = circle:GetY()
        if monitor:IsKeyPressed(keys:RIGHT)
            x = x + seconds * speed
            if x > (800 - circleRadius * 2)
                x = 800 - circleRadius * 2
            end
        elseif monitor:IsKeyPressed(keys:LEFT)
            x = x - seconds * speed
            if x < 0
                x = 0
            end
        elseif monitor:IsKeyPressed(keys:UP)
            y = y + seconds * speed
            if y > (600 - circleRadius * 2)
                y = 600 - circleRadius * 2
            end
        elseif monitor:IsKeyPressed(keys:DOWN)
            y = y - seconds * speed
            if y < 0
                y = 0
            end
        end
        circle:SetX(x)
        circle:SetY(y)
        if monitor:IsKeyPressed(keys:SPACE)
            if pressed = false
                integer xDiff = cast(integer, target:GetX() - circle:GetX())
                integer yDiff = cast(integer, target:GetY() - circle:GetY())
                output xDiff + " " + yDiff
                pressed = true
            end
        else
            pressed = false
        end
    end
end