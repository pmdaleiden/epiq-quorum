use Libraries.Game.Game
use Libraries.Game.Graphics.Drawable
use Libraries.Game.InputMonitor
use Libraries.Interface.Events.KeyboardEvent
use Libraries.Game.Graphics.Color
use Libraries.Compute.Random
use Libraries.Interface.Events.CollisionListener2D
use Libraries.Interface.Events.CollisionEvent2D
use Libraries.Compute.Math
use Libraries.Interface.Events.KeyboardListener
use Libraries.Sound.Audio
use Libraries.Containers.Array
use Libraries.Containers.Iterator
use Libraries.Interface.Item2D

class Main is Game, CollisionListener2D, KeyboardListener
    Drawable hero
    Drawable target
    Drawable castle
    Drawable ko
    Drawable steve
    Drawable sina
    Array<Drawable> ground
    Array<Drawable> coins
    Drawable bird
    Drawable toxicBirdCrap
    Color c
    InputMonitor monitor
    KeyboardEvent keys
    Random r

    integer speed = 200
    integer targetSpeed = 100
    integer xSpeed = 100
    integer ySpeed = 100
    integer score = 0
    integer heroRadius = 10
    integer targetSize = 30
    integer jumpSpeed = 150
    integer groundHeight = 100
    integer groundWidthMin = 100
    integer groundWidthMax = 400
    integer groundSpeed = 50
    integer pitWidth = 60
    integer counter = 0

    number time = 0
    number cumTime = 0
    number jumpTime = 0.75
    number cumJumpTime = 0
    
    boolean inJump = false

    Audio music
    Audio jump
    Audio cash
    Audio fart

    action Main
        StartGame()
    end

    action CreateGame
        hero:SetName("hero")
        i = 1
        repeat 10 times
            Drawable coin
            coin:Load("media/QCoin.png")
            coin:SetPosition(i * 150, 200)
            coin:SetCollidable(true)
            coins:Add(coin)
            coin:SetName("coin")
            Add(coin)
            i = i + 1
        end
        hero:Load("media/Caffeine.png")
        hero:SetPosition(0, 100)
        hero:Scale(0.3)
        target:LoadFilledRectangle(targetSize, targetSize, c:Red())
        target:SetPosition(400, 300)
        hero:SetCollidable(true)
        target:SetCollidable(true)
        castle:Load("media/castle.jpg")
        castle:SetPosition(300, 100)
        ko:Load("media/kobad.jpg")
        ko:SetPosition(150, 200)
        steve:Load("media/stevebad.jpg")
        steve:SetPosition(250, 200)
        sina:Load("media/sinabad.jpg")
        sina:SetPosition(300, 200)
        
        bird:LoadFilledTriangle(0,0,20,60,40,0)
        bird:SetPosition(0, 550)
        bird:Rotate(90)

        number arrayNamesCounter = 0

        toxicBirdCrap:LoadFilledTriangle(0,0,10,10, 20, 0, c:CustomColor(1, 0.5, 0.5, 1))
        toxicBirdCrap:SetPosition(0, 100000)
        Add(toxicBirdCrap)

        bird:SetCollidable(true)
        Add(hero)
        Add(target)
        Add(castle)
        Add(ko)
        Add(steve)
        Add(sina)
        time = r:RandomNumber()
        AddCollisionListener(me)
        AddKeyboardListener(me)

        number cumFloor = 0
        repeat 10 times
            Drawable newFloorPiece
            newFloorPiece:LoadFilledRectangle(r:RandomIntegerBetween(groundWidthMin, groundWidthMax), 100, c:Green())
            newFloorPiece:SetCollidable(true)
            newFloorPiece:SetPosition(cumFloor, 0)            
            cumFloor = cumFloor + newFloorPiece:GetWidth() + pitWidth
            Add(newFloorPiece)
            ground:AddToEnd(newFloorPiece)
        end

        //winning music: http://www.bensound.com/royalty-free-music/track/badass

        //Other: http://www.bensound.com/royalty-free-music/track/energy

        //A little adorable royalty free music piece available 
        //here: http://www.bensound.com/royalty-free-music/track/cute
        music:Load("media/bensound-cute.ogg")
        music:SetVolume(0.5)
        music:EnableLooping()
        music:Play()
        cash:Load("media/cash.ogg")
        jump:Load("media/fart.ogg")
    end

    action BeginCollision(CollisionEvent2D e)
        inJump = false

        Item2D a = e:GetItemA()
        Item2D b = e:GetItemB()
        if a:GetName() = "hero" and b:GetName() = "coin" or
           a:GetName() = "coin" and b:GetName() = "hero"
           cash:Play()
        end
    end

    action PressedKey(KeyboardEvent event)
        if event:keyCode = event:SPACE
            if inJump = false
                inJump = true
                cumJumpTime = 0
                if hero:GetX() < groundHeight
                    output "you die"
                end
                jump:Play()
            end
        end
    end

    action Update(number seconds)
        cumTime = cumTime + seconds
        if cumTime > time
            cumTime = 0
            time = r:RandomNumber()
            xSpeed = r:RandomIntegerBetween(-targetSpeed, targetSpeed)
            ySpeed = r:RandomIntegerBetween(-targetSpeed, targetSpeed)
        end
        number newX = target:GetX() + seconds * xSpeed
        number newY = target:GetY() + seconds * ySpeed
        if newX < targetSize or newX > 800 - targetSize
            xSpeed = -xSpeed
        end
        if newY < targetSize or newY > 600 - targetSize
            ySpeed = -ySpeed
        end
        target:SetX(newX)
        target:SetY(newY)
        number x = hero:GetX()
        if monitor:IsKeyPressed(keys:RIGHT)
            x = x + seconds * speed
            if x > (800 - heroRadius * 2)
                x = 800 - heroRadius * 2
            end
        elseif monitor:IsKeyPressed(keys:LEFT)
            x = x - seconds * speed
            if x < 0
                x = 0
            end
        elseif monitor:IsKeyPressed(keys:EQUALS)
            groundSpeed = groundSpeed + 20
            if targetSpeed > 0
                targetSpeed = targetSpeed + 20
            else
                targetSpeed = targetSpeed - 20
            end
        elseif monitor:IsKeyPressed(keys:MINUS)
            groundSpeed = groundSpeed - 20
            if targetSpeed = 0
                targetSpeed = 0
            elseif targetSpeed > 0
                targetSpeed = targetSpeed - 20
            else
                targetSpeed = targetSpeed + 20
            end
        end
        hero:SetX(x)

        if inJump
            cumJumpTime = cumJumpTime + seconds
            if cumJumpTime < jumpTime * 0.40
                hero:SetY(hero:GetY() + seconds * jumpSpeed)
            elseif cumJumpTime < jumpTime * 0.60
            //pause at the top of the jump
            else
                hero:SetY(hero:GetY() - seconds * jumpSpeed)
            end
        end

        number newBirdX = bird:GetX() + 50 * seconds
        bird:SetX(newBirdX)

        number newBirdCrapY = toxicBirdCrap:GetY() - 400 * seconds
        toxicBirdCrap:SetY(newBirdCrapY)

        Iterator<Drawable> it = ground:GetIterator()
        repeat while it:HasNext()
            Drawable floorPiece = it:Next()
            number itemX = floorPiece:GetX()
            if itemX + floorPiece:GetWidth() < 0
                ground:RemoveFromFront()
            else
                itemX = itemX - seconds * groundSpeed
                floorPiece:SetX(itemX)
            end
        end
    end
end
